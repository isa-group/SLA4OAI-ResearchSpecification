swagger: "2.0"
info: 
    title: Papamoscas
    description: "Microservice API generated by [Hivepod](https://hivepod.io)"
    version: "0.0.1"
    x-sla: ./papamoscas-sla.yml
host: papamoscas2.herokuapp.com
schemes: 
    - http
    - https
basePath: /api
consumes: 
    - application/json
produces: 
    - application/json
    - text/html
paths: 
    /birds/{id}:
        parameters: 
            $ref: "#/parameters/id"
        put:
            operationId: updateBird
            description: "Update an existing bird by its ID." 
            parameters: 
                -   name: document
                    in: body
                    description: "Update a document by sending the paths to be updated in the request body."
                    required: true
                    schema:
                        $ref: "#/definitions/Bird"
            responses: 
                200: 
                    description: "Sucessful response. Single resource."
                    schema: 
                        $ref: "#/definitions/Bird"
                404: 
                    description: "No bird was found with that ID."
                    schema:
                        type: string
                422: 
                    description: "Validation error."
                    schema: 
                        type: array
                        items: 
                            $ref: "#/definitions/ValidationError"
                default: 
                    description: "Unexpected error."
                    schema: 
                        type: string
        delete:
            operationId: deleteBirdById
            description: "Deletes an existing bird by its ID." 
            responses: 
                200: 
                    description: "Sucessful response. Single resource."
                    schema: 
                        $ref: "#/definitions/Bird"
                404: 
                    description: "No bird was found with that ID."
                    schema: 
                        type: string
                default: 
                    description: "Unexpected error."
                    schema: 
                        type: string
    /birds: 
        get: 
            operationId: queryBird
            description: "Query over birds."
            parameters: 
                - $ref: "#/parameters/count"
                - $ref: "#/parameters/skip"
                - $ref: "#/parameters/limit"
                - $ref: "#/parameters/conditions"
                - $ref: "#/parameters/distinct"
                - $ref: "#/parameters/hint"
                - $ref: "#/parameters/comment"
            responses: 
                200: 
                    description: "Sucessful response. Collection of resources."
                    schema: 
                        type: array
                        items: 
                            $ref: "#/definitions/Bird"
                404: 
                    description: "No birds matched that query."
                    schema: 
                        type: string
                default: 
                    description: "Unexpected error."
                    schema: 
                        type: string
        post: 
            operationId: createBird
            description: "Create one or more birds."
            parameters: 
                -   name: document
                    in: body
                    description: "Create a document by sending the paths to be added in the request body."
                    required: true
                    schema: 
                        $ref: "#/definitions/Bird"
     
            responses: 
                200: 
                    description: "Sucessful response. Single resource."
                    schema:
                        $ref: "#/definitions/Bird"
                404: 
                    description: "No birds matched that query."
                    schema: 
                        type: string
                422: 
                    description: "Validation error."
                    schema: 
                        type: array
                        items:
                            $ref: "#/definitions/ValidationError"
                default: 
                    description: "Unexpected error."
                    schema: 
                        type: string
        delete: 
            operationId: deleteBirdByQuery
            description: "Delete all birds matching the specified query."
            parameters: 
                - $ref: "#/parameters/skip"
                - $ref: "#/parameters/limit"
                - $ref: "#/parameters/conditions"
                - $ref: "#/parameters/distinct"
                - $ref: "#/parameters/hint"
                - $ref: "#/parameters/comment"
            responses: 
                200: 
                    description: "Sucessful response. Collection of resources."
                    schema: 
                        type: array
                        items:
                            $ref: "#/definitions/Bird"
                404: 
                    description: "No birds matched that query."
                    schema: 
                        type: string
                default: 
                    description: "Unexpected error."
                    schema: 
                        type: string
    /birds/deleteByIds: 
        post: 
            operationId: deleteByIds
            description: "Delete a set of object in one shot."
            parameters: 
                -   name: document
                    in: body
                    description: "Array of Ids to delete."
                    required: true
                    schema: 
                        type: array
                        items: 
                            type: string
            responses: 
                202: 
                    description: "Accepted for deletion."
                412: 
                    description: "Array of ids was not provided."
                default: 
                    description: "Generic error."
definitions: 
    ValidationError: 
        required: 
            - message
            - name
            - kind
            - path
        properties: 
            properties: 
                $ref: "#/definitions/ValidationErrorProperties"
            message: 
                type: string
            name: 
                type: string
            kind: 
                type: string
            path: 
                type: string
    ValidationErrorProperties: 
        required: 
            - type
            - message
            - path
        properties: 
            type: 
                type: string
            message: 
                type: string
            path: 
                type: string
    Bird: 
        required: 
            - specie
            - place
            - eggs
            - hatches
            - legDiameter
            - wingSize
        properties: 
            _ownerId: 
                type: string
            _createdAt: 
                type: string
                format: "date-time"
            specie: 
                type: string
            place: 
                type: string
            eggs: 
                type: integer
                format: int32
            hatches: 
                type: integer
                format: int32
            legDiameter: 
                type: integer
                format: int32
            wingSize: 
                type: number
                format: double
            _id: 
                type: string
            __v: 
                type: number
                format: int32
            id: 
                type: string
parameters: 
    id: 
        name: id
        in: path
        description: "The identifier of the resource."
        type: string
        required: true
    skip: 
        name: skip
        in: query
        description: "How many documents to skip. [doc](https://github.com/wprl/baucis/wiki/Query-String-Parameters#skip)"
        type: integer
        format: int32
        required: false
    limit: 
        name: limit
        in: query
        description: "The maximum number of documents to send. [doc](https://github.com/wprl/baucis/wiki/Query-String-Parameters#limit)"
        type: integer
        format: int32
        required: false
    count: 
        name: count
        in: query
        description: "Set to true to return count instead of documents. [doc](https://github.com/wprl/baucis/wiki/Query-String-Parameters#count)"
        type: boolean
        required: false
    conditions: 
        name: conditions
        in: query
        description: "Set the conditions used to find or remove the document(s). [doc](https://github.com/wprl/baucis/wiki/Query-String-Parameters#conditions)"
        type: string
        required: false
    sort: 
        name: sort
        in: query
        description: "Set the fields by which to sort. [doc](https://github.com/wprl/baucis/wiki/Query-String-Parameters#sort)"
        type: string
        required: false
    distinct: 
        name: distinct
        in: query
        description: "Set to a path name to retrieve an array of distinct values. [doc](https://github.com/wprl/baucis/wiki/Query-String-Parameters#distinct)"
        type: string
        required: false
    hint: 
        name: hint
        in: query
        description: "Add an index hint to the query (must be enabled per controller). [doc](https://github.com/wprl/baucis/wiki/Query-String-Parameters#hint)"
        type: string
        required: false
    comment: 
        name: comment
        in: query
        description: "Add a comment to a query (must be enabled per controller). [doc](https://github.com/wprl/baucis/wiki/Query-String-Parameters#comment)"
        type: string
        required: false
securityDefinitions: 
    basic: 
        type: basic
    apikey: 
        type: apiKey
        name: apikey
        in: header